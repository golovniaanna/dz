#включают  в себя lt;iostream 
#  включаемыев себя lt;ctime 

счетчик Int No 0;
int findnum;
индекс int;
int o;

класс рвота {
Частная:
    структуры структуры{
        int значение;
 Структурируйте «пе»;
    };
 Структурируйте q0, q, q1;
Общественного:
    Puk(){
 q0 - новый Struct;
 q q0;
    }
пустота печати(){
 q-gt;значение 1 йранд()%1000;
    printf(%s%d%s%d",  "n Your", счетчик1," значение: ", q-gt;значение);
 q1 - новый Struct;
 q - qgt; p q1;
 q q1;
    }

Int нахождения(){
        printf("n Вветколичество значений, которые вы хотите найти:"  );
        scanf_s ("%d, и findnum);
        если (findnum lt; счетчик)
            для (int i q 1;i lt; счетчик; i)
 q q0 - qgt; p;
                если (i и findnum)
                    индекс i;
 o q0 - qgt; значение;
                    Перерыв;
                }
 q0 q;
            }
            возвращение o;
        }
        еще,  если (findnum (gt; счетчик)
        printf("N Ошибка." );
        для (int i й 0;i lt; счетчик; i)»
 q1 q - qgt; p;
            удалить q;
 q q1;
        }
        printf("N Адресаудаляются." );
        возвращение 0;
        }

    }
};


int основной () {
 блевать действий и рвота();
    делать{
        кнопка int;
        printf(» nТип1 для создания числа, 2, чтобы найти номер или любой другой номер, чтобы закрыть программу: " );
        scanf_s("%d",и кнопка);
        если (кнопка No 1){
            action.printnset();
 счетчика;
            printf(%s%d",  Non Количествочисел: " , счетчик);

        }
        иначе, если (кнопка No 2){
            printf ("n%s%d%s%d"," " , индекс,  " элемент ",  действие.());
        }
        Еще {
            printf("nBye." );
            возвращение 0;
        }
    }в то время как (правда);
} 
